{"version":3,"sources":["logo.svg","components/members/Member.js","components/members/Members.js","components/form/Form.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","member","props","react_default","a","createElement","className","key","id","style","margin","first_name","last_name","onClick","editButtonClick","deleteButtonClick","members","map","Member","form","onSubmit","onSubmitForm","type","name","value","onChange","disabled","buttonDisabled","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","inputOnChangeHandler","event","setState","defineProperty","target","onSubmitHandler","console","log","preventDefault","payload","state","url","formStatus","addMember","concat","memberIdSelected","editMember","axios","post","then","response","toConsumableArray","push","data","catch","error","put","indexMember","findIndex","editButtonHandler","deleteButtonHandler","delete","status","index","splice","_this2","get","_this3","border","Members","Form","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6b171e64.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react'\r\n\r\nconst member = (props) => (\r\n    <div className=\"col-md-6\" key={props.member.id}>\r\n          <div className=\"card\" style={{margin:10}}>\r\n            <div className=\"card-body\">\r\n              <h5 className=\"card-title\">{props.member.id}</h5>\r\n              <h5 className=\"card-title\">{props.member.first_name}</h5>\r\n              <h5 className=\"card-title\">{props.member.last_name}</h5>\r\n              <button className=\"btn btn-primary\" onClick={() => props.editButtonClick(props.member)}>Edit</button>\r\n              <button className=\"btn btn-danger\" onClick={()=> props.deleteButtonClick(props.member.id)}>Delete</button>\r\n            </div>\r\n          </div>\r\n    </div>\r\n)\r\nexport default member\r\n","import React from 'react'\r\nimport Member from './Member'\r\nconst members = (props) => (\r\n    props.members.map((member)=>(\r\n        <Member\r\n          key={member.id}\r\n          member={member}\r\n          editButtonClick={(member)=>props.editButtonClick(member)}\r\n          deleteButtonClick={(id)=>props.deleteButtonClick(id)}\r\n        />\r\n        ) \r\n    )\r\n)\r\nexport default members","import React from 'react'\r\n\r\nconst form = (props) => (\r\n    <form onSubmit={props.onSubmitForm}>\r\n        <div className=\"form-group\">\r\n            <label>First Name : </label>\r\n            <input \r\n                type=\"text\" \r\n                className=\"form-control\" \r\n                name=\"first_name\"\r\n                value={props.first_name}\r\n                onChange={props.onChange}/>\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label>Last Name : </label>\r\n                <input \r\n                type=\"text\" \r\n                className=\"form-control\"\r\n                name=\"last_name\"\r\n                value={props.last_name}\r\n                onChange={props.onChange}/>\r\n              </div>\r\n              <button \r\n              type=\"submit\" \r\n              className=\"btn btn-primary\" \r\n              disabled={props.buttonDisabled}>\r\n                Submit\r\n              </button>\r\n    </form>\r\n)\r\nexport default form","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport axios from 'axios';\nimport Members from './components/members/Members'\nimport Form from './components/form/Form'\nclass App extends Component {\n  //=============================Berguna untuk inisiasi awal tampilan atau kondisi awal tampilan dan bisa di dirubah sewaktu2 dengan method dibawah=============================\n  constructor(props){\n    super(props);\n    this.state = {\n      members: [],\n      first_name: [],\n      last_name: [],\n      buttonDisabled: false,\n      formStatus: \"Create\",\n      memberIdSelected: null\n    };\n  }\n  componentDidMount(){\n    axios\n      .get('https://reqres.in/api/users?page=1')\n      .then( response => {\n        // console.log(response)\n        this.setState({members: response.data.data})\n      })\n      .catch(error=>{\n        console.log(error)\n      })\n  }\n  inputOnChangeHandler = event => {\n    this.setState({[event.target.name]: event.target.value})\n  }\n  onSubmitHandler = event => {\n    console.log(\"Form Bekerja\")\n    event.preventDefault()\n    this.setState({\n      buttonDisabled:true,\n      first_name: \"\",\n      last_name: \"\"\n    })\n    var payload = {\n      first_name: this.state.first_name,\n      last_name: this.state.last_name\n    }\n    var url = \" \"\n    if(this.state.formStatus === \"Create\"){\n      url = \"https://reqres.in/api/users\"\n      this.addMember(url,payload)\n    } else{\n      url = `https://reqres.in/api/users/${this.state.memberIdSelected}`\n      this.editMember(url,payload)\n    }\n  }\n\n  addMember = (url,payload) => {\n    axios.post(url, payload)\n    .then(response => {\n      console.log(response)\n\n      var members = [...this.state.members]\n      members.push(response.data)\n      this.setState({\n        members,\n        buttonDisabled: false,\n        first_name: \"\",\n        last_name: \"\"\n      })\n    })\n    .catch(error => {\n      console.log(error)\n    })\n  }\n  editMember = (url,payload)=>{\n    axios\n    .put(url, payload)\n    .then(response=>{\n      var members = [...this.state.members]\n      var indexMember = members.findIndex(member => member.id === this.state.memberIdSelected)\n\n      members[indexMember].first_name = response.data.first_name\n      members[indexMember].last_name = response.data.last_name\n\n      this.setState({\n        members,\n        buttonDisabled: false,\n        first_name:\"\",\n        last_name:\"\",\n        formStatus: \"Create\"\n      })\n    })\n    .catch(error=>{\n      console.log(error)\n    })\n  }\n  editButtonHandler = member => {\n    this.setState({\n      first_name: member.first_name,\n      last_name: member.last_name,\n      formStatus: \"Edit\",\n      memberIdSelected: member.id\n    })\n  }\n  deleteButtonHandler = id => {\n    var url = `https://reqres.in/api/user/${id}`\n    axios\n      .delete(url)\n      .then(response=>{\n        if(response.status===204){\n          var members = [...this.state.members]\n          var index = members.findIndex(member => member.id === id)\n          members.splice(index, 1)\n          this.setState({members})\n        }\n      })\n      .catch(error=>{\n        console.log(error)\n      })\n  }\n  render() {\n    return (\n      <div className=\"container\">\n        <h1>Gembiri Devschool</h1>\n        <div className=\"row\">\n          <div className=\"col-md-6\" style={{border: \"1px solid black\"}}>\n            <h2>Member</h2>\n            <div className=\"row\">\n              <Members \n                members={this.state.members}\n                editButtonClick={(member)=>this.editButtonHandler(member)}\n                deleteButtonClick={(id)=>this.deleteButtonHandler(id)}\n              />\n            </div>\n          </div>\n          <div className=\"col-md-6\" style={{border: \"1px solid black\"}}>\n              <h2>Form {this.state.formStatus}</h2>\n              <Form \n                onSubmitForm={this.onSubmitHandler}\n                onChange={this.inputOnChangeHandler}\n                first_name={this.state.first_name}\n                last_name={this.state.last_name}\n                buttonDisabled={this.state.buttonDisabled}\n              />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}